" pluginy pro markdown support
" :h vim-markdown
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

" If you follow a link like this '[link text](link-url)' using the 'ge' shortcut,
" this option will automatically save any edits you made before moving you:
let g:vim_markdown_autowrite = 1

" bash-support
"Plugin 'bash-support.vim'

" html plugin
Plugin 'mattn/emmet-vim'

" https://github.com/lifepillar/pgsql.vim
" zvyraznovani a doplnovani syntaxe pro postgresql
" pri pouziti z psql idealni kombinace :-)
"Plugin 'lifepillar/pgsql.vim'

" default pro fsechny sql
"let g:sql_type_default = 'pgsql'

" JavaScript development
" https://github.com/prettier/prettier
"Plugin 'prettier/prettier'

" https://github.com/dense-analysis/ale
"Plugin 'dense-analysis/ale'

"augroup shaperd
"	au!
"	" Automatically choose the correct dbext profile
"	autocmd BufRead */shaperd/* DBSetOption profile=shaperd
"augroup end

" doxygen - pro generovani dokumentace z kodu
Plugin 'vim-scripts/DoxygenToolkit.vim'

"let g:load_doxygen_syntax=1
"let g:doxygen_enhanced_color=1
"// vim:syntax=cpp.doxygen

" https://vimawesome.com/plugin/auto-ctags-vim
" sudo apt-get install exuberant-ctags
Plugin 'soramugi/auto-ctags.vim'

" Create at a Writing the file, default 0 - just for cpp files
autocmd FileType cpp,hpp,c,h let g:auto_ctags = 1

" Create the tags name, default tags
let g:auto_ctags_tags_name = '.tags'

" Create the ctags args, default --tag-relative --recurse --sort=yes
let g:auto_ctags_tags_args = ['--tag-relative=yes', '--recurse=yes', '--sort=yes']

" Vim plug for switching between companion source files (e.g. .h and .cpp)
Plugin 'derekwyatt/vim-fswitch'

" http://majutsushi.github.io/tagbar/
Plugin 'majutsushi/tagbar'

" open tagbar in vertical split next to the active window
let g:tagbar_position = 'vertical rightbelow'

nnoremap <F7> :TagbarOpen<CR>
nnoremap <F8> :TagbarToggle<CR>

" doplnovani, kontroly atd pro C++
"Plugin 'Valloric/YouCompleteMe'
Plugin 'ycm-core/YouCompleteMe'

" prochazeni erroru pomoci :lnext :lprevious
let g:ycm_always_populate_location_list = 1

let g:ycm_global_ycm_extra_conf = '~/.vim/ycm_extra_conf.py'
